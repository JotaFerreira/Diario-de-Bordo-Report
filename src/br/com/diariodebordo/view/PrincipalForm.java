package br.com.diariodebordo.view;

import br.com.diariodebordo.model.dao.Conexao;
import br.com.diariodebordo.model.dao.CoordenadorDAO;
import br.com.diariodebordo.model.dao.DataDAO;
import br.com.diariodebordo.model.dao.FilialDAO;
import br.com.diariodebordo.model.dao.OcorrenciaDAO;
import br.com.diariodebordo.model.dao.PesquisaDAO;
import br.com.diariodebordo.model.vo.Coordenador;
import br.com.diariodebordo.model.vo.Data;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.GridBagLayout;
import java.awt.event.ItemEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import br.com.diariodebordo.model.vo.Ocorrencia;
import br.com.diariodebordo.model.vo.Setor;
import br.com.diariodebordo.model.vo.Supervisor;
import br.com.diariodebordo.model.vo.Tecnico;
import diario.de.bordo.relatorio.Versao;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author joao.oliveira
 */
public class PrincipalForm extends javax.swing.JFrame {

    /**
     * Creates new form PrincipalForm
     */
    public PrincipalForm() {

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        principalPanel = new javax.swing.JPanel();
        principalTab = new javax.swing.JTabbedPane();
        conteudoIndicadoresPanel = new javax.swing.JPanel();
        secundariaTab = new javax.swing.JTabbedPane();
        coordenadorScrollPane = new javax.swing.JScrollPane();
        conteudoCoordenadorPanel = new javax.swing.JPanel();
        graficoPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        diaInicialCmb1 = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        mesInicialCmb1 = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        anoInicialCmb1 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        diaFinalCmb1 = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        mesFinalCmb1 = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        anoFinalCmb1 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        contOcorrenciaCooTable = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        ufCmb = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        coordenadorCmb1 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        ocorrenciaCmb = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        ofensorCooTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        supervisorScrollPane = new javax.swing.JScrollPane();
        conteudoSupervisorPanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        ufCmb1 = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        supervisorCmb = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        ocorrenciaCmb1 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        ofensorSupTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        diaFinalCmb2 = new javax.swing.JComboBox();
        diaInicialCmb2 = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        mesFinalCmb2 = new javax.swing.JComboBox();
        mesInicialCmb2 = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        anoInicialCmb2 = new javax.swing.JComboBox();
        anoFinalCmb2 = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        contOcorrenciaSupTable = new javax.swing.JTable();
        tecnicoScrollPane = new javax.swing.JScrollPane();
        conteudoTecnicoPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        diaInicialCmb3 = new javax.swing.JComboBox();
        jLabel29 = new javax.swing.JLabel();
        mesInicialCmb3 = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        anoInicialCmb3 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        diaFinalCmb3 = new javax.swing.JComboBox();
        jLabel31 = new javax.swing.JLabel();
        mesFinalCmb3 = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        anoFinalCmb3 = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        ufCmb2 = new javax.swing.JComboBox();
        jLabel34 = new javax.swing.JLabel();
        tecnicoCmb = new javax.swing.JComboBox();
        jLabel35 = new javax.swing.JLabel();
        ocorrenciaCmb2 = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        contOcorrenciaTecTable = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        ofensorTecTable = new javax.swing.JTable();
        setorTab = new javax.swing.JScrollPane();
        conteudoSetor = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        ufCmb3 = new javax.swing.JComboBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        contOcorrenciaSetor = new javax.swing.JTable();
        jLabel38 = new javax.swing.JLabel();
        diaInicialCmb4 = new javax.swing.JComboBox();
        jLabel39 = new javax.swing.JLabel();
        mesInicialCmb4 = new javax.swing.JComboBox();
        jLabel40 = new javax.swing.JLabel();
        anoInicialCmb4 = new javax.swing.JComboBox();
        jLabel41 = new javax.swing.JLabel();
        diaFinalCmb4 = new javax.swing.JComboBox();
        jLabel42 = new javax.swing.JLabel();
        mesFinalCmb4 = new javax.swing.JComboBox();
        jLabel43 = new javax.swing.JLabel();
        anoFinalCmb4 = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        detalhesSetorTable = new javax.swing.JTable();
        setorInfoLabel = new javax.swing.JLabel();
        setorNomeLabel = new javax.swing.JLabel();
        basePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        coordenadorCmb = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        diaInicialCmb = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        mesInicialCmb = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        anoInicialCmb = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        diaFinalCmb = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        mesFinalCmb = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        anoFinalCmb = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        graveCmb = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenuItem3.setText("Detalhar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        graficoPanel1.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout graficoPanel1Layout = new javax.swing.GroupLayout(graficoPanel1);
        graficoPanel1.setLayout(graficoPanel1Layout);
        graficoPanel1Layout.setHorizontalGroup(
            graficoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        graficoPanel1Layout.setVerticalGroup(
            graficoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        jLabel9.setText("Data Inicial:");

        jLabel18.setText("/");

        mesInicialCmb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesInicialCmb1ItemStateChanged(evt);
            }
        });

        jLabel19.setText("/");

        jLabel12.setText("Data Final:");

        jLabel20.setText("/");

        mesFinalCmb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesFinalCmb1ItemStateChanged(evt);
            }
        });

        jLabel21.setText("/");

        contOcorrenciaCooTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        contOcorrenciaCooTable.setFocusable(false);
        contOcorrenciaCooTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(contOcorrenciaCooTable);

        jLabel15.setText("UF:");

        ufCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "CE", "MA", "PI" }));
        ufCmb.setSelectedIndex(-1);
        ufCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ufCmbItemStateChanged(evt);
            }
        });

        jLabel16.setText("Coordenador:");

        coordenadorCmb1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione uma UF>" }));

        jLabel17.setText("Ocorrencia:");

        ofensorCooTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        ofensorCooTable.setComponentPopupMenu(jPopupMenu1);
        jScrollPane3.setViewportView(ofensorCooTable);

        jButton2.setText("Pesquisar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout conteudoCoordenadorPanelLayout = new javax.swing.GroupLayout(conteudoCoordenadorPanel);
        conteudoCoordenadorPanel.setLayout(conteudoCoordenadorPanelLayout);
        conteudoCoordenadorPanelLayout.setHorizontalGroup(
            conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteudoCoordenadorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graficoPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(conteudoCoordenadorPanelLayout.createSequentialGroup()
                        .addGroup(conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(conteudoCoordenadorPanelLayout.createSequentialGroup()
                                .addGroup(conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(conteudoCoordenadorPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(diaFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel20))
                                    .addGroup(conteudoCoordenadorPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(diaInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel18)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conteudoCoordenadorPanelLayout.createSequentialGroup()
                                        .addComponent(mesFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(anoFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conteudoCoordenadorPanelLayout.createSequentialGroup()
                                        .addComponent(mesInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(anoInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 632, Short.MAX_VALUE)
                            .addGroup(conteudoCoordenadorPanelLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ufCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(coordenadorCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(conteudoCoordenadorPanelLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ocorrenciaCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addGap(24, 24, 24)))))
                .addContainerGap())
        );
        conteudoCoordenadorPanelLayout.setVerticalGroup(
            conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteudoCoordenadorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(graficoPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anoInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(mesInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(diaInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel15)
                    .addComponent(ufCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(coordenadorCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(anoFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21)
                        .addComponent(mesFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20)
                        .addComponent(diaFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ocorrenciaCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2)
                        .addComponent(jLabel17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(conteudoCoordenadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        coordenadorScrollPane.setViewportView(conteudoCoordenadorPanel);

        secundariaTab.addTab("Coordenador", coordenadorScrollPane);

        jLabel22.setText("UF:");

        ufCmb1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "CE", "MA", "PI" }));
        ufCmb1.setSelectedIndex(-1);
        ufCmb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ufCmb1ItemStateChanged(evt);
            }
        });

        jLabel23.setText("Supervisor:");

        supervisorCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione uma UF>" }));

        jLabel24.setText("Ocorrencia:");

        jButton3.setText("Pesquisar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        ofensorSupTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        ofensorSupTable.setComponentPopupMenu(jPopupMenu1);
        jScrollPane4.setViewportView(ofensorSupTable);

        jLabel10.setText("Data Inicial:");

        jLabel13.setText("Data Final:");

        jLabel25.setText("/");

        jLabel26.setText("/");

        mesFinalCmb2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesFinalCmb2ItemStateChanged(evt);
            }
        });

        mesInicialCmb2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesInicialCmb2ItemStateChanged(evt);
            }
        });

        jLabel27.setText("/");

        jLabel28.setText("/");

        contOcorrenciaSupTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        contOcorrenciaSupTable.setFocusable(false);
        contOcorrenciaSupTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(contOcorrenciaSupTable);

        javax.swing.GroupLayout conteudoSupervisorPanelLayout = new javax.swing.GroupLayout(conteudoSupervisorPanel);
        conteudoSupervisorPanel.setLayout(conteudoSupervisorPanelLayout);
        conteudoSupervisorPanelLayout.setHorizontalGroup(
            conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conteudoSupervisorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(conteudoSupervisorPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(conteudoSupervisorPanelLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(diaFinalCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel26))
                            .addGroup(conteudoSupervisorPanelLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(diaInicialCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conteudoSupervisorPanelLayout.createSequentialGroup()
                                .addComponent(mesFinalCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anoFinalCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conteudoSupervisorPanelLayout.createSequentialGroup()
                                .addComponent(mesInicialCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anoInicialCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(conteudoSupervisorPanelLayout.createSequentialGroup()
                        .addGroup(conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(conteudoSupervisorPanelLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ufCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(supervisorCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, conteudoSupervisorPanelLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ocorrenciaCmb1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(53, 53, 53))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)))
        );
        conteudoSupervisorPanelLayout.setVerticalGroup(
            conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteudoSupervisorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(conteudoSupervisorPanelLayout.createSequentialGroup()
                        .addGroup(conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(ufCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)
                            .addComponent(supervisorCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(anoInicialCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27)
                            .addComponent(mesInicialCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)
                            .addComponent(diaInicialCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(29, 29, 29))
                    .addGroup(conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(anoFinalCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel28)
                        .addComponent(mesFinalCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26)
                        .addComponent(diaFinalCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(jLabel24)
                        .addComponent(ocorrenciaCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3)))
                .addGroup(conteudoSupervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)))
        );

        supervisorScrollPane.setViewportView(conteudoSupervisorPanel);

        secundariaTab.addTab("Supervisor", supervisorScrollPane);

        jLabel11.setText("Data Inicial:");

        jLabel29.setText("/");

        mesInicialCmb3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesInicialCmb3ItemStateChanged(evt);
            }
        });

        jLabel30.setText("/");

        jLabel14.setText("Data Final:");

        jLabel31.setText("/");

        mesFinalCmb3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesFinalCmb3ItemStateChanged(evt);
            }
        });

        jLabel32.setText("/");

        jLabel33.setText("UF:");

        ufCmb2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "CE", "MA", "PI" }));
        ufCmb2.setSelectedIndex(-1);
        ufCmb2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ufCmb2ItemStateChanged(evt);
            }
        });

        jLabel34.setText("Técnico:");

        tecnicoCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Selecione uma UF>" }));

        jLabel35.setText("Ocorrencia:");

        jButton4.setText("Pesquisar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        contOcorrenciaTecTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        contOcorrenciaTecTable.setFocusable(false);
        contOcorrenciaTecTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(contOcorrenciaTecTable);

        ofensorTecTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        ofensorTecTable.setComponentPopupMenu(jPopupMenu1);
        jScrollPane7.setViewportView(ofensorTecTable);

        javax.swing.GroupLayout conteudoTecnicoPanelLayout = new javax.swing.GroupLayout(conteudoTecnicoPanel);
        conteudoTecnicoPanel.setLayout(conteudoTecnicoPanelLayout);
        conteudoTecnicoPanelLayout.setHorizontalGroup(
            conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteudoTecnicoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(conteudoTecnicoPanelLayout.createSequentialGroup()
                        .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(conteudoTecnicoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(diaFinalCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel31))
                            .addGroup(conteudoTecnicoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(diaInicialCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel29)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conteudoTecnicoPanelLayout.createSequentialGroup()
                                .addComponent(mesFinalCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anoFinalCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conteudoTecnicoPanelLayout.createSequentialGroup()
                                .addComponent(mesInicialCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anoInicialCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(conteudoTecnicoPanelLayout.createSequentialGroup()
                        .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(conteudoTecnicoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ufCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel34)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tecnicoCmb, 0, 391, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, conteudoTecnicoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ocorrenciaCmb2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addGap(72, 72, 72))
                    .addGroup(conteudoTecnicoPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        conteudoTecnicoPanelLayout.setVerticalGroup(
            conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteudoTecnicoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(anoInicialCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel30)
                        .addComponent(mesInicialCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel29)
                        .addComponent(diaInicialCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(conteudoTecnicoPanelLayout.createSequentialGroup()
                            .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel33)
                                .addComponent(ufCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel34)
                                .addComponent(tecnicoCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(29, 29, 29))
                        .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(ocorrenciaCmb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(anoFinalCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32)
                            .addComponent(mesFinalCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4)
                            .addComponent(jLabel31)
                            .addComponent(diaFinalCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))))
                .addGap(2, 2, 2)
                .addGroup(conteudoTecnicoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(conteudoTecnicoPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                        .addGap(3, 3, 3))
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );

        tecnicoScrollPane.setViewportView(conteudoTecnicoPanel);

        secundariaTab.addTab("Técnico", tecnicoScrollPane);

        jLabel36.setText("UF:");

        ufCmb3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CE", "MA", "PI" }));

        contOcorrenciaSetor.setAutoCreateRowSorter(true);
        contOcorrenciaSetor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane8.setViewportView(contOcorrenciaSetor);

        jLabel38.setText("Data Inicial:");

        jLabel39.setText("/");

        mesInicialCmb4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesInicialCmb4ItemStateChanged(evt);
            }
        });

        jLabel40.setText("/");

        jLabel41.setText("Data Final:");

        jLabel42.setText("/");

        mesFinalCmb4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesFinalCmb4ItemStateChanged(evt);
            }
        });

        jLabel43.setText("/");

        jButton5.setText("Buscar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText(">>");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        detalhesSetorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane9.setViewportView(detalhesSetorTable);

        setorInfoLabel.setText("Mostrando 0 setor(es)");

        setorNomeLabel.setText("Setor:");

        javax.swing.GroupLayout conteudoSetorLayout = new javax.swing.GroupLayout(conteudoSetor);
        conteudoSetor.setLayout(conteudoSetorLayout);
        conteudoSetorLayout.setHorizontalGroup(
            conteudoSetorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteudoSetorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(conteudoSetorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(conteudoSetorLayout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane9))
                    .addGroup(conteudoSetorLayout.createSequentialGroup()
                        .addGroup(conteudoSetorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(conteudoSetorLayout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(diaInicialCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel39)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mesInicialCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel40)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anoInicialCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel41)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(diaFinalCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mesFinalCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel43)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anoFinalCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(conteudoSetorLayout.createSequentialGroup()
                                .addComponent(setorInfoLabel)
                                .addGap(305, 305, 305)
                                .addComponent(setorNomeLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ufCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(237, 237, 237)))
                .addContainerGap())
        );
        conteudoSetorLayout.setVerticalGroup(
            conteudoSetorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteudoSetorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(conteudoSetorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anoInicialCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(mesInicialCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39)
                    .addComponent(diaInicialCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel41)
                    .addComponent(diaFinalCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anoFinalCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43)
                    .addComponent(mesFinalCmb4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42)
                    .addComponent(jLabel36)
                    .addComponent(ufCmb3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGroup(conteudoSetorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(conteudoSetorLayout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jButton6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conteudoSetorLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(conteudoSetorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setorInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(setorNomeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(conteudoSetorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                            .addComponent(jScrollPane9))
                        .addGap(22, 22, 22))))
        );

        setorTab.setViewportView(conteudoSetor);

        secundariaTab.addTab("Setor", setorTab);

        javax.swing.GroupLayout conteudoIndicadoresPanelLayout = new javax.swing.GroupLayout(conteudoIndicadoresPanel);
        conteudoIndicadoresPanel.setLayout(conteudoIndicadoresPanelLayout);
        conteudoIndicadoresPanelLayout.setHorizontalGroup(
            conteudoIndicadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(secundariaTab)
        );
        conteudoIndicadoresPanelLayout.setVerticalGroup(
            conteudoIndicadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(secundariaTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
        );

        principalTab.addTab("Indicadores", conteudoIndicadoresPanel);

        jLabel1.setText("Coordenador:");

        jLabel2.setText("Data Inicial:");

        jLabel3.setText("/");

        mesInicialCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesInicialCmbItemStateChanged(evt);
            }
        });

        jLabel4.setText("/");

        jLabel5.setText("Data Final:");

        jLabel6.setText("/");

        mesFinalCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesFinalCmbItemStateChanged(evt);
            }
        });

        jLabel7.setText("/");

        jLabel8.setText("Grave:");

        graveCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sim", "Não", " " }));
        graveCmb.setSelectedIndex(-1);

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout basePanelLayout = new javax.swing.GroupLayout(basePanel);
        basePanel.setLayout(basePanelLayout);
        basePanelLayout.setHorizontalGroup(
            basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(basePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(coordenadorCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(diaInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mesInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anoInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(diaFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mesFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anoFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(graveCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        basePanelLayout.setVerticalGroup(
            basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(coordenadorCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(diaInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(mesInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(anoInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(diaFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(mesFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(anoFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(graveCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );

        principalTab.addTab("Base", basePanel);

        javax.swing.GroupLayout principalPanelLayout = new javax.swing.GroupLayout(principalPanel);
        principalPanel.setLayout(principalPanelLayout);
        principalPanelLayout.setHorizontalGroup(
            principalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 974, Short.MAX_VALUE)
            .addGroup(principalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(principalPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(principalTab, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        principalPanelLayout.setVerticalGroup(
            principalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 577, Short.MAX_VALUE)
            .addGroup(principalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, principalPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(principalTab, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jMenu1.setText("Arquivo");

        jMenuItem2.setText("Sair");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Relatórios");

        jMenuItem4.setText("Carregar Visão Coordenador");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Carregar Visão Supervisor");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuItem6.setText("Carregar Visão Técnico");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("Carregar Visão Setor");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Banco de Dados");

        jMenuItem8.setText("Atualizar");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem8);

        jMenuBar1.add(jMenu4);

        jMenu2.setText("Opções");

        jMenuItem1.setText("Exportar Base");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(principalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(principalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public static boolean iniciado;
    JPanel p = new JPanel() {

        public void paintComponent(Graphics g) {

            g.setColor(new Color(0, 0, 0, 140));
            g.fillRect(0, 0, getWidth(), getHeight());

        }

    };


    private void mesInicialCmb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesInicialCmb1ItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            preencheDiasIniciais();
        }

    }//GEN-LAST:event_mesInicialCmb1ItemStateChanged

    private void mesFinalCmb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesFinalCmb1ItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            preencheDiasFinais();
        }

    }//GEN-LAST:event_mesFinalCmb1ItemStateChanged

    private void mesInicialCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesInicialCmbItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            preencheDiasIniciais();
        }
    }//GEN-LAST:event_mesInicialCmbItemStateChanged

    private void mesFinalCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesFinalCmbItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            preencheDiasFinais();
        }
    }//GEN-LAST:event_mesFinalCmbItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        pesquisaDados();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        Versao vInfo = new Versao();
        this.setTitle("Diário de Bordo Report - Build: " +  vInfo.getVersion());

        try {

            Calendar calendar = Calendar.getInstance();

            preencheAnos();
            preencheMeses();
            preencheDiasIniciais();
            preencheDiasFinais();
            preencheOcorrencias();
            preencheCoordenadoresBase();
            preencheSetores();

            int diaHoje = calendar.get(Calendar.DAY_OF_MONTH);
            this.diaInicialCmb.setSelectedIndex(diaHoje - 1);
            this.diaFinalCmb.setSelectedIndex(diaHoje - 1);
            this.diaInicialCmb1.setSelectedIndex(diaHoje - 1);
            this.diaFinalCmb1.setSelectedIndex(diaHoje - 1);
            this.diaInicialCmb2.setSelectedIndex(diaHoje - 1);
            this.diaFinalCmb2.setSelectedIndex(diaHoje - 1);
            this.diaInicialCmb3.setSelectedIndex(diaHoje - 1);
            this.diaFinalCmb3.setSelectedIndex(diaHoje - 1);
            this.diaInicialCmb4.setSelectedIndex(diaHoje - 1);
            this.diaFinalCmb4.setSelectedIndex(diaHoje - 1);

//            ImageIcon ii = new ImageIcon(this.getClass().getResource(
//                    "/recursos/carregandoengines.gif"));
//            this.imageLabel.setIcon(ii);
            // this.imageLabel.setVisible(false);
            //   this.conteudoIndicadoresPanel.add(imageLabel);
            // CARREGA RELATÓRIOS
            //preencheContagemOcorrenciasCoo();
            //preencheContagemOcorrenciasSup();
            //preencheContagemOcorrenciasTec();
            //preencheOfensorCoordenador();
            //preencheOfensorSupervisor();
            //preencheOfensorTecnico();
            //montaGrafico();
            p.setOpaque(false);
            p.setLayout(new GridBagLayout());
            p.add(new JLabel(new ImageIcon("loading.gif")));

            // Take glass pane
            setGlassPane(p);

            PrincipalForm.iniciado = true;
            this.setVisible(true);
            this.setExtendedState(6);

            GlassPanel gp = new GlassPanel();
            setGlassPane(new GlassPanel());
            gp.setVisible(true);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        preencheContagemOcorrenciasCoo();
        preencheOfensorCoordenador();
        try {
            montaGraficoCoordenador();
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        diario.de.bordo.relatorio.ExcelExporter ExExcel = new diario.de.bordo.relatorio.ExcelExporter();
        ExExcel.saveFile(this, jTable1);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        this.dispose();

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        preencheContagemOcorrenciasSup();
        preencheOfensorSupervisor();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void mesFinalCmb2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesFinalCmb2ItemStateChanged

    }//GEN-LAST:event_mesFinalCmb2ItemStateChanged

    private void mesInicialCmb2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesInicialCmb2ItemStateChanged

    }//GEN-LAST:event_mesInicialCmb2ItemStateChanged

    private void mesInicialCmb3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesInicialCmb3ItemStateChanged

    }//GEN-LAST:event_mesInicialCmb3ItemStateChanged

    private void mesFinalCmb3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesFinalCmb3ItemStateChanged

    }//GEN-LAST:event_mesFinalCmb3ItemStateChanged

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        preencheContagemOcorrenciasTec();
        preencheOfensorTecnico();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        br.com.diariodebordo.model.dao.OcorrenciaDAO DAOOcorrencia = new br.com.diariodebordo.model.dao.OcorrenciaDAO();

        JTable tableInvoker = (JTable) this.jPopupMenu1.getInvoker();

        if (tableInvoker == null | 0 == tableInvoker.getRowCount()) {

            return;

        }

        String funcionario = tableInvoker.getValueAt(tableInvoker.getSelectedRow(), 0).toString();
        String ocorrencia = tableInvoker.getValueAt(tableInvoker.getSelectedRow(), 1).toString();

        Object objDiaInicio = null;
        Object objMesInicio = null;
        Object objAnoInicio = null;
        Object objDiaFinal = null;
        Object objMesFinal = null;
        Object objAnoFinal = null;

        if (tableInvoker == this.ofensorSupTable) {

            objDiaInicio = this.diaInicialCmb2.getSelectedItem();
            objMesInicio = this.mesInicialCmb2.getSelectedItem();
            objAnoInicio = this.anoInicialCmb2.getSelectedItem();
            objDiaFinal = this.diaFinalCmb2.getSelectedItem();
            objMesFinal = this.mesFinalCmb2.getSelectedItem();
            objAnoFinal = this.anoFinalCmb2.getSelectedItem();

        } else if (tableInvoker == this.ofensorTecTable) {

            objDiaInicio = this.diaInicialCmb3.getSelectedItem();
            objMesInicio = this.mesInicialCmb3.getSelectedItem();
            objAnoInicio = this.anoInicialCmb3.getSelectedItem();
            objDiaFinal = this.diaFinalCmb3.getSelectedItem();
            objMesFinal = this.mesFinalCmb3.getSelectedItem();
            objAnoFinal = this.anoFinalCmb3.getSelectedItem();

        } else if (tableInvoker == this.ofensorCooTable) {

            objDiaInicio = this.diaInicialCmb1.getSelectedItem();
            objMesInicio = this.mesInicialCmb1.getSelectedItem();
            objAnoInicio = this.anoInicialCmb1.getSelectedItem();
            objDiaFinal = this.diaFinalCmb1.getSelectedItem();
            objMesFinal = this.mesFinalCmb1.getSelectedItem();
            objAnoFinal = this.anoFinalCmb1.getSelectedItem();

        }

        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

        String dataInicial = anoInicio + "-" + mesInicio + "-" + diaInicio;
        String dataFinal = anoFinal + "-" + mesFinal + "-" + diaFinal;

        try {

            ArrayList<Ocorrencia> ocorrencias = null;

            if (tableInvoker == this.ofensorSupTable) {
                ocorrencias = DAOOcorrencia.getRegistroOcorrenciaSupervisor(funcionario, ocorrencia, dataInicial, dataFinal);

            } else if (tableInvoker == this.ofensorTecTable) {
                ocorrencias = DAOOcorrencia.getRegistroOcorrenciaTecnico(funcionario, ocorrencia, dataInicial, dataFinal);

            } else if (tableInvoker == this.ofensorCooTable) {
                ocorrencias = DAOOcorrencia.getRegistroOcorrenciaCoordenador(funcionario, ocorrencia, dataInicial, dataFinal);

            }

            DetalhesForm formDetail = new DetalhesForm(ocorrencias, dataInicial, dataFinal);
            formDetail.setVisible(true);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void ufCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ufCmbItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED & PrincipalForm.iniciado) {

            try {
                preencheCoordenadoresUF();
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_ufCmbItemStateChanged

    private void ufCmb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ufCmb1ItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED & PrincipalForm.iniciado) {

            try {
                preencheSupervisores();
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_ufCmb1ItemStateChanged

    private void ufCmb2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ufCmb2ItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED & PrincipalForm.iniciado) {

            try {
                preencheTecnicos();
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_ufCmb2ItemStateChanged

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed

        // secundariaTab.setVisible(false);
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {

                try {

                    preencheContagemOcorrenciasCoo();
                    preencheOfensorCoordenador();
                    montaGraficoCoordenador();

                    //  secundariaTab.setVisible(true);
                } catch (SQLException | ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
                }

            }
        });

        this.secundariaTab.setSelectedIndex(0);

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed

        SwingUtilities.invokeLater(new Runnable() {
            public void run() {

                preencheContagemOcorrenciasSup();
                preencheOfensorSupervisor();

            }
        });

        this.secundariaTab.setSelectedIndex(1);

    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed

        SwingUtilities.invokeLater(new Runnable() {
            public void run() {

                preencheContagemOcorrenciasTec();
                preencheOfensorTecnico();

            }
        });

        this.secundariaTab.setSelectedIndex(2);

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void mesInicialCmb4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesInicialCmb4ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_mesInicialCmb4ItemStateChanged

    private void mesFinalCmb4ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesFinalCmb4ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_mesFinalCmb4ItemStateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        try {
            preencheContagemOcorrenciasSet();
        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed

        SwingUtilities.invokeLater(new Runnable() {
            public void run() {

                try {
                    preencheContagemOcorrenciasSet();
                } catch (SQLException | ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
                }

            }
        });

        this.secundariaTab.setSelectedIndex(3);

    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed

        Conexao.copiarBanco();
        JOptionPane.showMessageDialog(null, "Banco Atualizado!");

    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        try {
            detalhesOcorrenciasSet();

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void preencheCoordenadoresUF() throws SQLException, ClassNotFoundException {

        CoordenadorDAO DAOCoordenador = new CoordenadorDAO();
        String uf = this.ufCmb.getSelectedItem().toString();
        ArrayList<Coordenador> coordenadoresFiltro = DAOCoordenador.getCoordenadoresPorUF(uf);
        this.coordenadorCmb1.removeAllItems();
        this.coordenadorCmb1.addItem("");

        for (Coordenador c : coordenadoresFiltro) {

            this.coordenadorCmb1.addItem(c.getNome());

        }

        this.coordenadorCmb1.setSelectedIndex(-1);

    }

    private void preencheCoordenadoresBase() throws SQLException, ClassNotFoundException {

        CoordenadorDAO DAOCoordenador = new CoordenadorDAO();
        ArrayList<Coordenador> coordenadoresSemFiltro = DAOCoordenador.getCoordenadores();
        this.coordenadorCmb.removeAllItems();
        this.coordenadorCmb.addItem("");

        for (Coordenador c : coordenadoresSemFiltro) {

            this.coordenadorCmb.addItem(c.getNome());

        }

        this.coordenadorCmb.setSelectedIndex(-1);

    }

    private void preencheSupervisores() throws SQLException, ClassNotFoundException {

        br.com.diariodebordo.model.dao.SupervisorDAO DAOSupervisor = new br.com.diariodebordo.model.dao.SupervisorDAO();
        String uf = this.ufCmb1.getSelectedItem().toString();
        ArrayList<Supervisor> supervisores = DAOSupervisor.getSupervisoresPorUF(uf);

        this.supervisorCmb.removeAllItems();
        this.supervisorCmb.addItem("");

        for (Supervisor s : supervisores) {

            this.supervisorCmb.addItem(s.getNome());

        }

        this.supervisorCmb.setSelectedIndex(-1);

    }

    private void preencheTecnicos() throws SQLException, ClassNotFoundException {

        br.com.diariodebordo.model.dao.TecnicoDAO DAOTecnico = new br.com.diariodebordo.model.dao.TecnicoDAO();
        String uf = this.ufCmb2.getSelectedItem().toString();
        ArrayList<Tecnico> tecnicos = DAOTecnico.getTecnicosPorUF(uf);

        this.tecnicoCmb.removeAllItems();
        this.tecnicoCmb.addItem("");

        for (Tecnico t : tecnicos) {

            this.tecnicoCmb.addItem(t.getNome());

        }

        this.tecnicoCmb.setSelectedIndex(-1);

    }

    private void preencheSetores() throws SQLException, ClassNotFoundException {

        Object objUF = this.ufCmb3.getSelectedItem();
        String uf = objUF != null ? objUF.toString() : "";

        FilialDAO DAOSetor = new FilialDAO();
        ArrayList<Setor> setores = DAOSetor.getSetoresPorUF(uf);

        // this.setorCmb.removeAllItems();;
        // this.setorCmb.addItem("");
        for (Setor Setor : setores) {

            //   this.setorCmb.addItem(Setor.getNome());
        }

        //   this.setorCmb.setSelectedIndex(-1);
    }

    private void preencheDiasIniciais() {

        if (this.mesInicialCmb.getSelectedItem() != null && this.anoInicialCmb.getSelectedItem() != null) {
            int ano = Integer.parseInt(this.anoInicialCmb.getSelectedItem().toString());
            int mes = Integer.parseInt(this.mesInicialCmb.getSelectedItem().toString());
            Calendar mycal = new GregorianCalendar(ano, mes, 0);
            int daysInMonth = mycal.getActualMaximum(Calendar.DAY_OF_MONTH);

            this.diaInicialCmb.removeAllItems();
            this.diaInicialCmb1.removeAllItems();
            this.diaInicialCmb2.removeAllItems();
            this.diaInicialCmb3.removeAllItems();
            this.diaInicialCmb4.removeAllItems();

            for (int i = 1; i <= daysInMonth; i++) {

                this.diaInicialCmb.addItem(i);
                this.diaInicialCmb1.addItem(i);
                this.diaInicialCmb2.addItem(i);
                this.diaInicialCmb3.addItem(i);
                this.diaInicialCmb4.addItem(i);

            }

        }

    }

    private void preencheDiasFinais() {

        if (this.mesFinalCmb.getSelectedItem() != null && this.anoFinalCmb.getSelectedItem() != null) {
            int ano = Integer.parseInt(this.anoFinalCmb.getSelectedItem().toString());
            int mes = Integer.parseInt(this.mesFinalCmb.getSelectedItem().toString());
            Calendar mycal = new GregorianCalendar(ano, mes, 0);
            int daysInMonth = mycal.getActualMaximum(Calendar.DAY_OF_MONTH);

            this.diaFinalCmb.removeAllItems();
            this.diaFinalCmb1.removeAllItems();
            this.diaFinalCmb2.removeAllItems();
            this.diaFinalCmb3.removeAllItems();
            this.diaFinalCmb4.removeAllItems();

            for (int i = 1; i <= daysInMonth; i++) {

                this.diaFinalCmb.addItem(i);
                this.diaFinalCmb1.addItem(i);
                this.diaFinalCmb2.addItem(i);
                this.diaFinalCmb3.addItem(i);
                this.diaFinalCmb4.addItem(i);

            }

        }

    }

    private void preencheMeses() throws SQLException, ClassNotFoundException {

        for (int i = 1; i <= 12; i++) {

            this.mesInicialCmb.addItem(i);
            this.mesFinalCmb.addItem(i);
            this.mesInicialCmb1.addItem(i);
            this.mesFinalCmb1.addItem(i);
            this.mesInicialCmb2.addItem(i);
            this.mesFinalCmb2.addItem(i);
            this.mesInicialCmb3.addItem(i);
            this.mesFinalCmb3.addItem(i);
            this.mesInicialCmb4.addItem(i);
            this.mesFinalCmb4.addItem(i);

        }

        Calendar calendar = Calendar.getInstance();
        this.mesInicialCmb.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesFinalCmb.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesInicialCmb1.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesFinalCmb1.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesInicialCmb2.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesFinalCmb2.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesInicialCmb3.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesFinalCmb3.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesInicialCmb4.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesFinalCmb4.setSelectedIndex(calendar.get(Calendar.MONTH));

    }

    private void preencheAnos() throws SQLException, ClassNotFoundException {

        DataDAO DAOData = new DataDAO();
        ArrayList<Data> datas = DAOData.getAnosBase();
        this.anoInicialCmb.removeAllItems();
        this.anoFinalCmb.removeAllItems();
        this.anoInicialCmb1.removeAllItems();
        this.anoFinalCmb1.removeAllItems();
        this.anoInicialCmb2.removeAllItems();
        this.anoFinalCmb2.removeAllItems();
        this.anoInicialCmb3.removeAllItems();
        this.anoFinalCmb3.removeAllItems();
        this.anoInicialCmb4.removeAllItems();
        this.anoFinalCmb4.removeAllItems();
        
        for (Data d : datas) {

            int ano = d.getAno();
            this.anoInicialCmb.addItem(ano);
            this.anoFinalCmb.addItem(ano);
            this.anoInicialCmb1.addItem(ano);
            this.anoFinalCmb1.addItem(ano);
            this.anoInicialCmb2.addItem(ano);
            this.anoFinalCmb2.addItem(ano);
            this.anoInicialCmb3.addItem(ano);
            this.anoFinalCmb3.addItem(ano);
            this.anoInicialCmb4.addItem(ano);
            this.anoFinalCmb4.addItem(ano);

        }

        this.anoInicialCmb.setSelectedIndex(this.anoInicialCmb.getItemCount() - 1);
        this.anoFinalCmb.setSelectedIndex(this.anoFinalCmb.getItemCount() - 1);
        this.anoInicialCmb1.setSelectedIndex(this.anoInicialCmb1.getItemCount() - 1);
        this.anoFinalCmb1.setSelectedIndex(this.anoFinalCmb1.getItemCount() - 1);
        this.anoInicialCmb2.setSelectedIndex(this.anoInicialCmb1.getItemCount() - 1);
        this.anoFinalCmb2.setSelectedIndex(this.anoFinalCmb1.getItemCount() - 1);
        this.anoInicialCmb3.setSelectedIndex(this.anoInicialCmb1.getItemCount() - 1);
        this.anoFinalCmb3.setSelectedIndex(this.anoFinalCmb1.getItemCount() - 1);
        this.anoInicialCmb4.setSelectedIndex(this.anoInicialCmb1.getItemCount() - 1);
        this.anoFinalCmb4.setSelectedIndex(this.anoFinalCmb1.getItemCount() - 1);

    }

    private void pesquisaDados() {

        PesquisaDAO Pesquisa = new PesquisaDAO();
        Object objCoordenador = this.coordenadorCmb.getSelectedItem();
        Object objDiaInicio = this.diaInicialCmb.getSelectedItem();
        Object objMesInicio = this.mesInicialCmb.getSelectedItem();
        Object objAnoInicio = this.anoInicialCmb.getSelectedItem();
        Object objDiaFinal = this.diaFinalCmb.getSelectedItem();
        Object objMesFinal = this.mesFinalCmb.getSelectedItem();
        Object objAnoFinal = this.anoFinalCmb.getSelectedItem();
        Object objGrave = this.graveCmb.getSelectedItem();

        String coordenador = objCoordenador != null ? objCoordenador.toString() : "";
        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";
        String grave = objGrave != null ? objGrave.toString().trim() : "";

        String dataInicio = anoInicio + "-" + mesInicio + "-" + diaInicio;
        String dataFim = anoFinal + "-" + mesFinal + "-" + diaFinal;

        try {

            ArrayList<Ocorrencia> resultado = Pesquisa.getPesquisa(coordenador, dataInicio, dataFim, grave);

            Object[] colunaNomes = {"UF", "ATENDENTE", "DATA", "PERIODO", "TECNICO", "SETOR", "OCORRENCIA", "REC_SUP", "REC_COO",
                "REC_GER", "OBSERVAÇÃO", "GRAVE", "USUARIO"};
            DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            for (Ocorrencia c : resultado) {

                Object[] valores = {c.getUf(), c.getAtendente(), c.getData_att(), c.getPeriodo(), c.getTecnico(),
                    c.getSetor_gra_area(), c.getOcorrencias(), c.getRecorrencia_sup(), c.getRecorrencia_coo(), c.getReccorencia_ger(),
                    c.getObservacoes(), c.getGrave(), c.getUsername()};
                dados.addRow(valores);

            }

            this.jTable1.setModel(dados);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void preencheContagemOcorrenciasCoo() {

        try {

            Object objDiaInicio = this.diaInicialCmb1.getSelectedItem();
            Object objMesInicio = this.mesInicialCmb1.getSelectedItem();
            Object objAnoInicio = this.anoInicialCmb1.getSelectedItem();
            Object objDiaFinal = this.diaFinalCmb1.getSelectedItem();
            Object objMesFinal = this.mesFinalCmb1.getSelectedItem();
            Object objAnoFinal = this.anoFinalCmb1.getSelectedItem();

            String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
            String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
            String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
            String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
            String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
            String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

            String dataInicio = anoInicio + "-" + mesInicio + "-" + diaInicio;
            String dataFim = anoFinal + "-" + mesFinal + "-" + diaFinal;

            OcorrenciaDAO DAOOcorrencia = new OcorrenciaDAO();
            ArrayList<Ocorrencia> resultado = DAOOcorrencia.getContagemOcorrenciasCoo(dataInicio, dataFim);

            Object[] colunaNomes = {"UF - Coordenador", "Qtd. Ocorrencias"};
            DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };

            for (Ocorrencia c : resultado) {

                Object[] valores = {c.getCoordenador(), c.getContagem()};
                dados.addRow(valores);

            }

            this.contOcorrenciaCooTable.setModel(dados);

            this.contOcorrenciaCooTable.setDefaultRenderer(Object.class, new TableCellRenderer() {

                private final DefaultTableCellRenderer DEFAULT_RENDERER = new DefaultTableCellRenderer();

                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    Component c = DEFAULT_RENDERER.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                    DEFAULT_RENDERER.setHorizontalAlignment(SwingConstants.CENTER);

                    if (isSelected) {

                    } else {

                        if (contOcorrenciaCooTable.getValueAt(row, 0).toString().length() == 2) {

                            c.setForeground(Color.WHITE);
                            c.setBackground(Color.RED);

                        } else {

                            c.setForeground(Color.BLACK);
                            c.setBackground(Color.WHITE);
                        }

                    }

                    return c;
                }

            });

            TableCellRenderer rendererFromHeader = contOcorrenciaCooTable.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.CENTER);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void preencheContagemOcorrenciasSup() {

        try {

            Object objDiaInicio = this.diaInicialCmb2.getSelectedItem();
            Object objMesInicio = this.mesInicialCmb2.getSelectedItem();
            Object objAnoInicio = this.anoInicialCmb2.getSelectedItem();
            Object objDiaFinal = this.diaFinalCmb2.getSelectedItem();
            Object objMesFinal = this.mesFinalCmb2.getSelectedItem();
            Object objAnoFinal = this.anoFinalCmb2.getSelectedItem();

            String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
            String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
            String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
            String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
            String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
            String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

            String dataInicio = anoInicio + "-" + mesInicio + "-" + diaInicio;
            String dataFim = anoFinal + "-" + mesFinal + "-" + diaFinal;

            OcorrenciaDAO DAOOcorrencia = new OcorrenciaDAO();
            ArrayList<Ocorrencia> resultado = DAOOcorrencia.getContagemOcorrenciasSup(dataInicio, dataFim);

            Object[] colunaNomes = {"UF - Supervisor", "Qtd. Ocorrencias"};
            DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };

            for (Ocorrencia c : resultado) {

                Object[] valores = {c.getSupervisor(), c.getContagem()};
                dados.addRow(valores);
            }

            this.contOcorrenciaSupTable.setModel(dados);

            this.contOcorrenciaSupTable.setDefaultRenderer(Object.class, new TableCellRenderer() {

                private final DefaultTableCellRenderer DEFAULT_RENDERER = new DefaultTableCellRenderer();

                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    Component c = DEFAULT_RENDERER.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                    DEFAULT_RENDERER.setHorizontalAlignment(SwingConstants.CENTER);

                    if (isSelected) {

                    } else {

                        if (contOcorrenciaSupTable.getValueAt(row, 0).toString().length() == 2) {

                            c.setForeground(Color.WHITE);
                            c.setBackground(Color.RED);

                        } else {

                            c.setForeground(Color.BLACK);
                            c.setBackground(Color.WHITE);
                        }

                    }

                    return c;
                }

            });

            TableCellRenderer rendererFromHeader = contOcorrenciaSupTable.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.CENTER);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void preencheContagemOcorrenciasTec() {

        try {

            Object objDiaInicio = this.diaInicialCmb3.getSelectedItem();
            Object objMesInicio = this.mesInicialCmb3.getSelectedItem();
            Object objAnoInicio = this.anoInicialCmb3.getSelectedItem();
            Object objDiaFinal = this.diaFinalCmb3.getSelectedItem();
            Object objMesFinal = this.mesFinalCmb3.getSelectedItem();
            Object objAnoFinal = this.anoFinalCmb3.getSelectedItem();

            String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
            String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
            String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
            String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
            String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
            String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

            String dataInicio = anoInicio + "-" + mesInicio + "-" + diaInicio;
            String dataFim = anoFinal + "-" + mesFinal + "-" + diaFinal;

            OcorrenciaDAO DAOOcorrencia = new OcorrenciaDAO();
            ArrayList<Ocorrencia> resultado = DAOOcorrencia.getContagemOcorrenciasTec(dataInicio, dataFim);

            Object[] colunaNomes = {"UF - Tecnico", "Qtd. Ocorrencias"};
            DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            };

            for (Ocorrencia c : resultado) {

                Object[] valores = {c.getTecnico(), c.getContagem()};
                dados.addRow(valores);

            }

            this.contOcorrenciaTecTable.setModel(dados);
            this.contOcorrenciaTecTable.setDefaultRenderer(Object.class, new TableCellRenderer() {

                private final DefaultTableCellRenderer DEFAULT_RENDERER = new DefaultTableCellRenderer();

                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    Component c = DEFAULT_RENDERER.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                    DEFAULT_RENDERER.setHorizontalAlignment(SwingConstants.CENTER);

                    if (isSelected) {

                    } else {

                        String item = contOcorrenciaTecTable.getValueAt(row, 0).toString();

                        if (item.length() == 2) {

                            c.setForeground(Color.WHITE);
                            c.setBackground(Color.RED);

                        } else {

                            c.setForeground(Color.BLACK);
                            c.setBackground(Color.WHITE);

                        }

                    }

                    return c;
                }

            });

            TableCellRenderer rendererFromHeader = contOcorrenciaTecTable.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.CENTER);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void detalhesOcorrenciasSet() throws SQLException, ClassNotFoundException {

        Object objDiaInicio = this.diaInicialCmb4.getSelectedItem();
        Object objMesInicio = this.mesInicialCmb4.getSelectedItem();
        Object objAnoInicio = this.anoInicialCmb4.getSelectedItem();
        Object objDiaFinal = this.diaFinalCmb4.getSelectedItem();
        Object objMesFinal = this.mesFinalCmb4.getSelectedItem();
        Object objAnoFinal = this.anoFinalCmb4.getSelectedItem();
        int index = this.contOcorrenciaSetor.getSelectedRow();
        String setor = "";

        if (index >= 0) {

            setor = this.contOcorrenciaSetor.getValueAt(index, 0).toString();

        }

        this.setorNomeLabel.setText("Setor: " + setor);

        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

        String dataInicio = anoInicio + "-" + mesInicio + "-" + diaInicio;
        String dataFim = anoFinal + "-" + mesFinal + "-" + diaFinal;

        OcorrenciaDAO DAOOcorrencia = new OcorrenciaDAO();
        ArrayList<Ocorrencia> ocorrencias = DAOOcorrencia.getOcorrenciasSetores(setor, dataInicio, dataFim);

        Object[] colunaNomes = {"ATENDENTE", "PERIODO", "TECNICO", "OCORRENCIA", "REC_SUP", "REC_COO",
            "REC_GER", "OBSERVAÇÃO", "GRAVE"};
        DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        for (Ocorrencia ocorr : ocorrencias) {

            String valores[] = {ocorr.getAtendente(), ocorr.getPeriodo(), ocorr.getTecnico(),
                ocorr.getOcorrencias(), ocorr.getRecorrencia_sup(), ocorr.getRecorrencia_coo(),
                ocorr.getReccorencia_ger(), ocorr.getObservacoes(), ocorr.getGrave(), ocorr.getUsername()};
            dados.addRow(valores);

        }

        this.detalhesSetorTable.setModel(dados);

    }

    private void preencheContagemOcorrenciasSet() throws SQLException, ClassNotFoundException {

        Object objUF = this.ufCmb3.getSelectedItem();
        Object objDiaInicio = this.diaInicialCmb4.getSelectedItem();
        Object objMesInicio = this.mesInicialCmb4.getSelectedItem();
        Object objAnoInicio = this.anoInicialCmb4.getSelectedItem();
        Object objDiaFinal = this.diaFinalCmb4.getSelectedItem();
        Object objMesFinal = this.mesFinalCmb4.getSelectedItem();
        Object objAnoFinal = this.anoFinalCmb4.getSelectedItem();

        String uf = objUF != null ? objUF.toString() : "";
        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

        String dataInicio = anoInicio + "-" + mesInicio + "-" + diaInicio;
        String dataFim = anoFinal + "-" + mesFinal + "-" + diaFinal;

        OcorrenciaDAO DAOOcorrencia = new OcorrenciaDAO();
        //  ArrayList<Ocorrencia> ocorrencias = DAOOcorrencia.getContagemOcorrenciaSetor(uf, dataInicio, dataFim);
        FilialDAO DAOFilial = new FilialDAO();
        ArrayList<Setor> setores = DAOFilial.getSetoresPorUF(uf);

        Object[] colunaNomes = {"Setor", "Coordenador", "Contagem de Ocorrencias"};
        DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

        };

        for (Setor setor : setores) {

            String[] valores = {setor.getNome(), setor.getCoordenador(), ""};
            dados.addRow(valores);

        }

        for (int i = 0; i <= dados.getRowCount() - 1; i++) {

            String setor = dados.getValueAt(i, 0).toString();
            dados.setValueAt(DAOOcorrencia.getContagemOcorrenciaSetor(setor, dataInicio, dataFim), i, 2);

        }

        this.contOcorrenciaSetor.setModel(dados);
        this.setorInfoLabel.setText("Mostrando " + dados.getRowCount() + " setor(es)");

        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        this.contOcorrenciaSetor.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        this.contOcorrenciaSetor.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
        this.contOcorrenciaSetor.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);

        TableCellRenderer rendererFromHeader = contOcorrenciaSetor.getTableHeader().getDefaultRenderer();
        JLabel headerLabel = (JLabel) rendererFromHeader;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);

    }

    private void preencheOfensorCoordenador() {

        Object objUF = this.ufCmb.getSelectedItem();
        Object objOcorrencia = this.ocorrenciaCmb.getSelectedItem();
        Object objCoordenador = this.coordenadorCmb1.getSelectedItem();
        Object objDiaInicio = this.diaInicialCmb1.getSelectedItem();
        Object objMesInicio = this.mesInicialCmb1.getSelectedItem();
        Object objAnoInicio = this.anoInicialCmb1.getSelectedItem();
        Object objDiaFinal = this.diaFinalCmb1.getSelectedItem();
        Object objMesFinal = this.mesFinalCmb1.getSelectedItem();
        Object objAnoFinal = this.anoFinalCmb1.getSelectedItem();

        String uf = objUF != null ? objUF.toString().trim() : "";
        String coordenador = objCoordenador != null ? objCoordenador.toString() : "";
        String ocorrencia = objOcorrencia != null ? objOcorrencia.toString() : "";
        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

        String dataInicial = anoInicio + "-" + mesInicio + "-" + diaInicio;
        String dataFinal = anoFinal + "-" + mesFinal + "-" + diaFinal;

        OcorrenciaDAO DAOOcorrencia = new OcorrenciaDAO();
        Object[] colunaNomes = {"Coordenador", "Ocorrencia", "Ocorrencias"};
        DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        try {

            ArrayList<Ocorrencia> resultado = DAOOcorrencia.getOcorrenciasPorCoordenador(uf, coordenador, ocorrencia, dataInicial, dataFinal);

            for (Ocorrencia c : resultado) {

                Object[] valores = {c.getCoordenador(), c.getOcorrencias(), c.getContagem()};
                dados.addRow(valores);

            }

            this.ofensorCooTable.setModel(dados);

            // Centraliza os valores nas linhas
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
            this.ofensorCooTable.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            this.ofensorCooTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
            this.ofensorCooTable.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);

            // Centraliza os valores no cabeçalho
            TableCellRenderer rendererFromHeader = ofensorCooTable.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.CENTER);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void preencheOfensorSupervisor() {

        Object objUF = this.ufCmb1.getSelectedItem();
        Object objOcorrencia = this.ocorrenciaCmb1.getSelectedItem();
        Object objSupervisor = this.supervisorCmb.getSelectedItem();
        Object objDiaInicio = this.diaInicialCmb2.getSelectedItem();
        Object objMesInicio = this.mesInicialCmb2.getSelectedItem();
        Object objAnoInicio = this.anoInicialCmb2.getSelectedItem();
        Object objDiaFinal = this.diaFinalCmb2.getSelectedItem();
        Object objMesFinal = this.mesFinalCmb2.getSelectedItem();
        Object objAnoFinal = this.anoFinalCmb2.getSelectedItem();

        String uf = objUF != null ? objUF.toString().trim() : "";
        String supervisor = objSupervisor != null ? objSupervisor.toString() : "";
        String ocorrencia = objOcorrencia != null ? objOcorrencia.toString() : "";
        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

        String dataInicial = anoInicio + "-" + mesInicio + "-" + diaInicio;
        String dataFinal = anoFinal + "-" + mesFinal + "-" + diaFinal;

        OcorrenciaDAO DAOOcorrencia = new OcorrenciaDAO();
        Object[] colunaNomes = {"Supervisor", "Ocorrencia", "Contagem de Ocorrencias"};
        DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        try {

            ArrayList<Ocorrencia> resultado = DAOOcorrencia.getOcorrenciasPorSupervisor(uf, supervisor, ocorrencia, dataInicial, dataFinal);

            for (Ocorrencia c : resultado) {

                Object[] valores = {c.getSupervisor(), c.getOcorrencias(), c.getContagem()};
                dados.addRow(valores);

            }

            this.ofensorSupTable.setModel(dados);

            // Centraliza os valores nas linhas
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
            this.ofensorSupTable.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            this.ofensorSupTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
            this.ofensorSupTable.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);

            // Centraliza os valores no cabeçalho
            TableCellRenderer rendererFromHeader = ofensorSupTable.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.CENTER);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void preencheOfensorTecnico() {

        Object objUF = this.ufCmb2.getSelectedItem();
        Object objOcorrencia = this.ocorrenciaCmb2.getSelectedItem();
        Object objTecnico = this.tecnicoCmb.getSelectedItem();
        Object objDiaInicio = this.diaInicialCmb3.getSelectedItem();
        Object objMesInicio = this.mesInicialCmb3.getSelectedItem();
        Object objAnoInicio = this.anoInicialCmb3.getSelectedItem();
        Object objDiaFinal = this.diaFinalCmb3.getSelectedItem();
        Object objMesFinal = this.mesFinalCmb3.getSelectedItem();
        Object objAnoFinal = this.anoFinalCmb3.getSelectedItem();

        String uf = objUF != null ? objUF.toString().trim() : "";
        String tecnico = objTecnico != null ? objTecnico.toString() : "";
        String ocorrencia = objOcorrencia != null ? objOcorrencia.toString() : "";
        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

        String dataInicial = anoInicio + "-" + mesInicio + "-" + diaInicio;
        String dataFinal = anoFinal + "-" + mesFinal + "-" + diaFinal;

        OcorrenciaDAO DAOOcorrencia = new OcorrenciaDAO();
        Object[] colunaNomes = {"Tecnico", "Ocorrencia", "Contagem de Ocorrencias"};
        DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        try {

            ArrayList<Ocorrencia> resultado = DAOOcorrencia.getOcorrenciasPorTecnico(uf, tecnico, ocorrencia, dataInicial, dataFinal);

            for (Ocorrencia c : resultado) {

                Object[] valores = {c.getTecnico(), c.getOcorrencias(), c.getContagem()};
                dados.addRow(valores);

            }

            this.ofensorTecTable.setModel(dados);

            // Centraliza os valores nas linhas
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
            this.ofensorTecTable.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            this.ofensorTecTable.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
            this.ofensorTecTable.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);

            // Centraliza os valores no cabeçalho
            TableCellRenderer rendererFromHeader = ofensorTecTable.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.CENTER);

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void preencheOcorrencias() throws SQLException, ClassNotFoundException {

        OcorrenciaDAO DAOOcorrencia = new OcorrenciaDAO();
        ArrayList<Ocorrencia> ocorrencias = DAOOcorrencia.getItensOcorrencias();
        this.ocorrenciaCmb.addItem("");
        this.ocorrenciaCmb1.addItem("");
        this.ocorrenciaCmb2.addItem("");

        for (Ocorrencia c : ocorrencias) {

            String ocorrencia = c.getOcorrencias();
            this.ocorrenciaCmb.addItem(ocorrencia);
            this.ocorrenciaCmb1.addItem(ocorrencia);
            this.ocorrenciaCmb2.addItem(ocorrencia);

        }

        this.ocorrenciaCmb.setSelectedIndex(-1);
        this.ocorrenciaCmb1.setSelectedIndex(-1);
        this.ocorrenciaCmb2.setSelectedIndex(-1);

    }

    private void montaGraficoCoordenador() throws SQLException, ClassNotFoundException {

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        String[] ufs = {"CE", "MA", "PI"};
        CoordenadorDAO DAOCoordenador = new CoordenadorDAO();

        for (int i = 0; i <= ufs.length - 1; i++) {

            for (int z = 0; z <= this.contOcorrenciaCooTable.getRowCount() - 1; z++) {

                String coordenador = this.contOcorrenciaCooTable.getValueAt(z, 0).toString();
                String ufCoordenador = DAOCoordenador.getUF(coordenador);

                if (coordenador.length() > 2) {

                    if (ufs[i].equalsIgnoreCase(ufCoordenador)) {

                        dataset.addValue(Double.parseDouble(this.contOcorrenciaCooTable.getValueAt(z, 1).toString()), ufs[i],
                                coordenador);

                    }

                }

            }

        }

        Object objDiaInicio = this.diaInicialCmb1.getSelectedItem();
        Object objMesInicio = this.mesInicialCmb1.getSelectedItem();
        Object objAnoInicio = this.anoInicialCmb1.getSelectedItem();
        Object objDiaFinal = this.diaFinalCmb1.getSelectedItem();
        Object objMesFinal = this.mesFinalCmb1.getSelectedItem();
        Object objAnoFinal = this.anoFinalCmb1.getSelectedItem();

        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

        String dataPesquisa = "";
        String dataI = diaInicio + "/" + mesInicio + "/" + anoInicio;
        String dataF = diaFinal + "/" + mesFinal + "/" + anoFinal;

        if (dataI.equals(dataF)) {

            dataPesquisa = dataI;

        } else {

            dataPesquisa = dataI + " - " + dataF;

        }

        String titulo = "Quantitativo de Ocorrencias por Coordenação: " + dataPesquisa;
        String eixoy = "Qtd. Ocorrencias";
        String txt_legenda = "";
        boolean legenda = true;
        boolean tooltips = true;
        boolean urls = false;

        JFreeChart graf = ChartFactory.createStackedBarChart(titulo, txt_legenda, eixoy, dataset, PlotOrientation.VERTICAL, legenda, tooltips, urls);
        ChartPanel myChartPanel = new ChartPanel(graf, false);
        myChartPanel.setName("graficoCoordenador");
        myChartPanel.setSize(graficoPanel1.getWidth(), graficoPanel1.getHeight());
        CategoryPlot p = graf.getCategoryPlot();

        CategoryAxis axis = p.getDomainAxis();
        axis.setLowerMargin(0.1);
        axis.setUpperMargin(0.1);
        axis.setCategoryMargin(0.1);

        axis.setCategoryLabelPositions(CategoryLabelPositions.UP_45);
        BarRenderer renderer = (BarRenderer) p.getRenderer();
        renderer.setItemMargin(0.1);
        p.setDomainAxis(axis);

        myChartPanel.setVisible(true);
        this.graficoPanel1.removeAll();
        graficoPanel1.add(myChartPanel);
        graficoPanel1.revalidate();
        graficoPanel1.repaint();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox anoFinalCmb;
    private javax.swing.JComboBox anoFinalCmb1;
    private javax.swing.JComboBox anoFinalCmb2;
    private javax.swing.JComboBox anoFinalCmb3;
    private javax.swing.JComboBox anoFinalCmb4;
    private javax.swing.JComboBox anoInicialCmb;
    private javax.swing.JComboBox anoInicialCmb1;
    private javax.swing.JComboBox anoInicialCmb2;
    private javax.swing.JComboBox anoInicialCmb3;
    private javax.swing.JComboBox anoInicialCmb4;
    private javax.swing.JPanel basePanel;
    private javax.swing.JTable contOcorrenciaCooTable;
    private javax.swing.JTable contOcorrenciaSetor;
    private javax.swing.JTable contOcorrenciaSupTable;
    private javax.swing.JTable contOcorrenciaTecTable;
    private javax.swing.JPanel conteudoCoordenadorPanel;
    private javax.swing.JPanel conteudoIndicadoresPanel;
    private javax.swing.JPanel conteudoSetor;
    private javax.swing.JPanel conteudoSupervisorPanel;
    private javax.swing.JPanel conteudoTecnicoPanel;
    private javax.swing.JComboBox coordenadorCmb;
    private javax.swing.JComboBox coordenadorCmb1;
    private javax.swing.JScrollPane coordenadorScrollPane;
    private javax.swing.JTable detalhesSetorTable;
    private javax.swing.JComboBox diaFinalCmb;
    private javax.swing.JComboBox diaFinalCmb1;
    private javax.swing.JComboBox diaFinalCmb2;
    private javax.swing.JComboBox diaFinalCmb3;
    private javax.swing.JComboBox diaFinalCmb4;
    private javax.swing.JComboBox diaInicialCmb;
    private javax.swing.JComboBox diaInicialCmb1;
    private javax.swing.JComboBox diaInicialCmb2;
    private javax.swing.JComboBox diaInicialCmb3;
    private javax.swing.JComboBox diaInicialCmb4;
    private javax.swing.JPanel graficoPanel1;
    private javax.swing.JComboBox graveCmb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox mesFinalCmb;
    private javax.swing.JComboBox mesFinalCmb1;
    private javax.swing.JComboBox mesFinalCmb2;
    private javax.swing.JComboBox mesFinalCmb3;
    private javax.swing.JComboBox mesFinalCmb4;
    private javax.swing.JComboBox mesInicialCmb;
    private javax.swing.JComboBox mesInicialCmb1;
    private javax.swing.JComboBox mesInicialCmb2;
    private javax.swing.JComboBox mesInicialCmb3;
    private javax.swing.JComboBox mesInicialCmb4;
    private javax.swing.JComboBox ocorrenciaCmb;
    private javax.swing.JComboBox ocorrenciaCmb1;
    private javax.swing.JComboBox ocorrenciaCmb2;
    private javax.swing.JTable ofensorCooTable;
    private javax.swing.JTable ofensorSupTable;
    private javax.swing.JTable ofensorTecTable;
    private javax.swing.JPanel principalPanel;
    private javax.swing.JTabbedPane principalTab;
    private javax.swing.JTabbedPane secundariaTab;
    private javax.swing.JLabel setorInfoLabel;
    private javax.swing.JLabel setorNomeLabel;
    private javax.swing.JScrollPane setorTab;
    private javax.swing.JComboBox supervisorCmb;
    private javax.swing.JScrollPane supervisorScrollPane;
    private javax.swing.JComboBox tecnicoCmb;
    private javax.swing.JScrollPane tecnicoScrollPane;
    private javax.swing.JComboBox ufCmb;
    private javax.swing.JComboBox ufCmb1;
    private javax.swing.JComboBox ufCmb2;
    private javax.swing.JComboBox ufCmb3;
    // End of variables declaration//GEN-END:variables
}
